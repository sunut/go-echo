// Code generated by SQLBoiler 4.8.6 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
)

// User is an object representing the database table.
type User struct {
	Id      string     `boil:"id" json:"id" toml:"id" yaml:"id"`
	Name    string  `boil:"name" json:"name" toml:"name" yaml:"name"`
	Address string  `boil:"address" json:"address" toml:"address" yaml:"address"`
	UCode   string  `boil:"ucode" json:"ucode" toml:"ucode" yaml:"ucode"`
	Mail    string  `boil:"mail" json:"mail" toml:"mail" yaml:"mail"`

	R *userR `boil:"-" json:"-" toml:"-" yaml:"-"`
	L userL  `boil:"-" json:"-" toml:"-" yaml:"-"`
}

var UserColumns = struct {
	Id      string
	Name    string
	Address string
	UCode   string
	Mail    string
}{
	Id:      "id",
	Name:    "name",
	Address: "address",
	UCode:   "ucode",
	Mail:    "mail",
}

var UserTableColumns = struct {
	Id      string
	Name    string
	Address string
	UCode   string
	Mail    string
}{
	Id:      "user.id",
	Name:    "user.name",
	Address: "user.address",
	UCode:   "user.ucode",
	Mail:    "user.mail",
}

// UserRels is where relationship names are stored.
var UserRels = struct {
}{}

// userR is where relationships are stored.
type userR struct {
}

// NewStruct creates a new relationship struct
func (*userR) NewStruct() *userR {
	return &userR{}
}

// userL is where Load methods for each relationship are stored.
type userL struct{}
